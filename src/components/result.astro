---
import Button from "./button.astro";

const { title, description, code, hasLink = true } = Astro.props;

const statusEmojis = {
  400: 'ü§®',   // Bad Request
  401: 'üîí',   // Unauthorized
  403: '‚õîÔ∏è',   // Forbidden
  404: 'üîç',   // Not Found
  500: '‚ùó',   // Internal Server Error
  502: 'üöß',   // Bad Gateway
  503: 'üõ†Ô∏è',   // Service Unavailable
  504: '‚è±Ô∏è',   // Gateway Timeout
};

const statusDescriptions = {
  400: 'La richiesta non pu√≤ essere elaborata. Verifica i dati inseriti e riprova.',
  401: 'Accesso non autorizzato. Effettua il login per continuare.',
  403: 'Non hai i permessi necessari per accedere a questa risorsa.',
  404: 'La risorsa che stai cercando non √® stata trovata o potrebbe essere stata rimossa.',
  500: 'Si √® verificato un errore sul nostro server. Ci scusiamo per il disagio.',
  502: 'Il server ha ricevuto una risposta non valida dal server upstream.',
  503: 'Il servizio non √® al momento disponibile. Riprova pi√π tardi.',
  504: 'Il server non ha risposto in tempo. Riprova pi√π tardi.',
};

const emoji = code && statusEmojis[code] ? statusEmojis[code] : '‚ùó';
const defaultDescription = description || (code && statusDescriptions[code]) || 'Si √® verificato un errore imprevisto.';

// Titoli personalizzati basati sul contesto se non √® stato fornito un titolo personalizzato
const contextualTitles = {
  400: 'Richiesta non valida',
  401: 'Autenticazione richiesta',
  403: 'Accesso negato',
  404: 'Risorsa non trovata',
  500: 'Errore del server',
  502: 'Errore di gateway',
  503: 'Servizio non disponibile',
  504: 'Timeout del server',
};

const displayTitle = title || (code && contextualTitles[code]) || 'Si √® verificato un errore';
---

<section class="container mx-auto py-12 text-center">
  <div class="max-w-xl mx-auto">
    {code && <div class="text-5xl mb-4">{emoji}</div>}
    {code && <div class="text-gray-400 mb-2">Errore {code}</div>}
    <h2 class="text-2xl font-semibold text-gray-800 mb-4">{displayTitle}</h2>
    <p class="text-gray-500">{defaultDescription}</p>
    {hasLink && <Button as="a" href="/" variant="outline" class="mt-6">
      Torna alla Home
    </Button>}
  </div>
</section>